{"version":3,"sources":["listGraph.min.js"],"names":["d3","scrollColumn","element","offset","select","attr","e","console","err","scrollLinks","graph","selection","level","scrollTop","nodeType","data","offsetLinks","diagonal","exit","remove","mousewheelColumn","listGraph","preventDefault","this","__data__","scrollHeight","Math","max","min","deltaY","scrollEl","scrollbar","el","heightScale","linkSelections","outgoing","incoming","prepareColumnForScrolling","global","querySelector","scrollbarEl","columnHeight","getBoundingClientRect","height","row","padding","scrollbarHeight","previousSibling","selectAll","x","column","width","scrollbarWidth","y","scale","linear","domain","range","traverseUp","node","callback","parent","traverseDown","i","childRefs","length","traverse","addLabel","append","visData","cell","contentWidth","contentHeight","name","text","setUpBar","datum","barHeight","className","magnitude","value","classed","addBar","bars","newSelection","enter","id","call","addBars","TRANSITION_SEMI_FAST","$","D3LayoutListGraph","svg","projection","d","topbarEl","container","json","error","toggleColumn","log","selectNodesColumn","levels","highlightBars","type","deHighlight","nodes","sortColumn","globalVisData","$el","d3El","sorting","parentNode","dataset","sort","a","b","valueA","barRefs","valueB","start","end","transition","duration","each","toggleOptions","addColumnControls","controls","addClass","on","appendTo","css","left","process","source","offsetY","offsetX","target","linksGroups","nodesGroups","links","rows","clone","hovering","scrollbars","activeScrollbar","undefined","clientY","keys","Object","invertedHeightScale","invert","contentEl","document","contentScrollTop"],"mappings":"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","file":"listGraph.min.js","sourcesContent":["/* Copyright Fritz Lekschas: D3 example visualization app using list-based graphs */\n(function (d3) { 'use strict';\n\n  d3 = 'default' in d3 ? d3['default'] : d3;\n\n  var TRANSITION_SEMI_FAST = 250;\n\n  function scrollColumn(element, offset) {\n    try {\n      d3.select(element).attr('transform', 'translate(0, ' + offset + ')');\n    } catch (e) {\n      console.err('ListGraph is not properly initialized!', e);\n    }\n  }\n\n  function scrollLinks(graph, selection, level, scrollTop, nodeType) {\n    selection.data(function () {\n      return graph.offsetLinks(level, scrollTop, nodeType);\n    }).attr('d', diagonal).exit().remove();\n  }\n\n  function mousewheelColumn(e, listGraph) {\n    e.preventDefault();\n\n    if (this.__data__.scrollHeight > 0) {\n      // Scroll nodes\n      this.__data__.scrollTop = Math.max(Math.min(this.__data__.scrollTop + e.deltaY, 0), -this.__data__.scrollHeight);\n\n      scrollColumn(this.__data__.scrollEl, this.__data__.scrollTop);\n\n      // Scroll scrollbar\n      this.__data__.scrollbar.el.__data__.scrollTop = this.__data__.scrollbar.heightScale(-this.__data__.scrollTop);\n\n      scrollColumn(this.__data__.scrollbar.el, this.__data__.scrollbar.el.__data__.scrollTop);\n\n      // Update links\n      scrollLinks(listGraph, this.__data__.linkSelections.outgoing, this.__data__.level, this.__data__.scrollTop, 'source');\n      scrollLinks(listGraph, this.__data__.linkSelections.incoming, this.__data__.level - 1, this.__data__.scrollTop, 'target');\n    }\n  }\n\n  function prepareColumnForScrolling(data, global) {\n    var scrollEl = this.querySelector('.nodes');\n    var scrollbarEl = this.querySelector('.scrollbar');\n\n    var columnHeight = scrollEl.getBoundingClientRect().height + 2 * global.row.padding;\n    var scrollHeight = columnHeight - height;\n    var scrollbarHeight = scrollHeight > 0 ? Math.max(height * height / scrollHeight, 10) : 0;\n\n    data.height = columnHeight;\n    data.linkSelections = {\n      incoming: this.previousSibling ? d3.select(this.previousSibling).selectAll('.link') : null,\n      outgoing: d3.select(this).selectAll('.link')\n    };\n    data.scrollEl = scrollEl;\n    data.scrollHeight = scrollHeight;\n    data.scrollTop = 0;\n    data.scrollbar = {\n      el: scrollbarEl,\n      x: data.x + global.column.width - scrollbarWidth,\n      y: 0,\n      width: scrollbarWidth,\n      height: scrollbarHeight,\n      scrollHeight: height - scrollbarHeight,\n      heightScale: d3.scale.linear().domain([0, scrollHeight]).range([0, height - scrollbarHeight])\n    };\n  }\n\n  function traverseUp(node, callback) {\n    while (node.parent) {\n      node = node.parent;\n      callback(node);\n    }\n  }\n\n  function traverseDown(node, callback) {\n    for (var i = node.childRefs.length; i--;) {\n      callback(node.childRefs[i]);\n      traverseDown(node.childRefs[i], callback);\n    }\n  }\n\n  function traverse(node, callback) {\n    traverseUp(node, callback);\n    traverseDown(node, callback);\n    for (var i = node.childRefs.length; i--;) {\n      callback(node.childRefs[i]);\n      traverseDown(node.childRefs[i], callback);\n    }\n  }\n\n  function addLabel(selection) {\n    selection.append('foreignObject').attr('x', function (data) {\n      return data.x + visData.global.column.padding + visData.global.cell.padding;\n    }).attr('y', function (data) {\n      return data.y + visData.global.row.padding + visData.global.cell.padding;\n    }).attr('width', visData.global.column.contentWidth).attr('height', visData.global.row.contentHeight / 2 - visData.global.cell.padding * 2).attr('class', 'label-wrapper').append('xhtml:div').attr('class', 'label').attr('title', function (data) {\n      return data.data.name;\n    }).append('xhtml:span').text(function (data) {\n      return data.data.name;\n    });\n  }\n\n  function setUpBar(selection, datum, barHeight, className, magnitude) {\n    selection.attr('x', datum.x + visData.global.column.padding + visData.global.cell.padding).attr('y', function (data, i) {\n      return datum.y + visData.global.row.padding + visData.global.row.contentHeight / 2 + barHeight * i + visData.global.cell.padding * (1 + 2 * i);\n    }).attr('width', function (data) {\n      return (magnitude ? data.value : 1) * (visData.global.column.contentWidth - visData.global.cell.padding * 2);\n    }).attr('height', barHeight).classed(className, true);\n  }\n\n  function addBar(selection) {\n    var datum = selection.datum();\n    var bars = datum.data.bars;\n    var barHeight = visData.global.row.contentHeight / (datum.data.bars.length * 2) - visData.global.cell.padding * 2;\n\n    var newSelection = selection.selectAll('.bar').data(bars).enter().append('g').attr('class', function (data) {\n      return 'bar ' + data.id;\n    });\n\n    newSelection.append('rect').call(setUpBar, datum, barHeight, 'bar-border');\n\n    newSelection.append('rect').call(setUpBar, datum, barHeight, 'bar-magnitude', true);\n  }\n\n  function addBars(selection) {\n    selection.append('g').classed('bars', true).call(addBar);\n  }\n\n  var width = 800;\n  var height = 200;\n  var scrollbarWidth = 6;\n  $('.list-graph').width(width);\n\n  var listGraph = new D3LayoutListGraph([width, height], [5, 5]);\n  var visData;\n\n  var diagonal = d3.svg.diagonal().projection(function (d) {\n    return [d.y, d.x];\n  });\n\n  var topbarEl = d3.select('.list-graph').append('div').attr('class', 'topbar');\n\n  var svg = d3.select('.list-graph').append('svg').attr('width', width).attr('height', height);\n\n  var container = svg.append('g');\n\n  d3.json('data.json', function (error, data) {\n    if (error) throw error;\n\n    // Initialize tree with root IDs '1' and '2'.\n    visData = listGraph.process(data, ['1', '2']);\n\n    diagonal.source(function (data) {\n      return {\n        x: data.source.y + data.source.offsetY + visData.global.row.height / 2,\n        y: data.source.x + data.source.offsetX + visData.global.column.contentWidth + visData.global.column.padding\n      };\n    }).target(function (data) {\n      return {\n        x: data.target.y + data.target.offsetY + visData.global.row.height / 2,\n        y: data.target.x + data.target.offsetX + visData.global.column.padding\n      };\n    }).projection(function (data) {\n      return [data.y, data.x];\n    });\n\n    var levels = container.selectAll('g').data(visData.nodes).enter().append('g').attr('class', 'level');\n\n    // We need to add an empty rectangle that fills up the whole column to ensure\n    // that the `g`'s size is at a maximum, otherwise scrolling will be halted\n    // when the cursor leaves an actually drawn element.\n    levels.append('rect').attr('class', 'scroll-container').attr('x', function (data) {\n      return data.x;\n    }).attr('y', function (data) {\n      return data.y;\n    }).attr('width', function (data) {\n      return visData.global.column.width;\n    }).attr('height', function (data) {\n      return visData.global.column.height;\n    });\n\n    // We need an extra container which is transformed during scrolling. Otherwise\n    // we \"scroll away\" the container that is listening to the mousehweel event.\n    var linksGroups = levels.append('g').attr('class', 'links');\n\n    var links = linksGroups.selectAll('.link').data(function (data, i) {\n      return listGraph.links(i);\n    }).enter().append('path').attr('class', 'link').attr('d', diagonal);\n\n    var nodesGroups = levels.append('g').attr('class', 'nodes');\n\n    var nodes = nodesGroups.selectAll('g.node').data(function (data) {\n      return data.rows;\n    }).enter().append('g').classed('node', true).classed('clone', function (data) {\n      return data.clone;\n    });\n\n    nodes.append('rect').attr('x', function (data) {\n      return data.x + visData.global.column.padding;\n    }).attr('y', function (data) {\n      return data.y + visData.global.row.padding;\n    }).attr('width', visData.global.column.contentWidth).attr('height', visData.global.row.contentHeight).attr('rx', 2).attr('ry', 2).classed('bg', true);\n\n    nodes.on('mouseover', function (data) {\n      data.hovering = 1;\n      traverse(data, function (data) {\n        data.hovering = 2;\n      });\n\n      d3.select(this).classed('hovering-directly', true);\n      nodes.classed('hovering-indirectly', function (data) {\n        return data.hovering === 2;\n      });\n    });\n\n    nodes.on('mouseout', function (data) {\n      data.hovering = 0;\n      traverse(data, function (data) {\n        data.hovering = 0;\n      });\n\n      d3.select(this).classed('hovering-directly', false);\n      nodes.classed('hovering-indirectly', false);\n    });\n\n    // Add label\n    nodes.call(addLabel);\n\n    // Add bars\n    nodes.each(function (data) {\n      d3.select(this).call(addBars);\n    });\n\n    // Add empty scrollbar element\n    var scrollbars = levels.append('rect').classed('scrollbar', true);\n\n    // Store the height for each column to save computations when scrolling.\n    levels.each(function (data) {\n      prepareColumnForScrolling.call(this, data, visData.global);\n    });\n\n    // Adjust scrollbars\n    scrollbars.attr('x', function (data) {\n      return data.scrollbar.x;\n    }).attr('y', function (data) {\n      return data.scrollbar.y;\n    }).attr('width', function (data) {\n      return scrollbarWidth;\n    }).attr('height', function (data) {\n      return data.scrollbar.height;\n    }).attr('rx', scrollbarWidth / 2).attr('ry', scrollbarWidth / 2).classed('ready', true);\n\n    var $levels = $(levels[0]).on('mousewheel', function (e) {\n      mousewheelColumn.call(this, e, listGraph);\n    });\n\n    // Reference to the currently active scrollbar. A scrollbar is active when\n    // one clicked on the scrollbar and hold the mouse down.\n    var activeScrollbar = undefined;\n\n    var $scrollbars = $(scrollbars[0]).each(function () {\n      this.__data__ = {\n        clientY: null,\n        scrollTop: 0\n      };\n      // Copy data over from the parent\n      var keys = Object.keys(this.parentNode.__data__.scrollbar);\n      for (var i = keys.length; i--;) {\n        this.__data__[keys[i]] = this.parentNode.__data__.scrollbar[keys[i]];\n      }\n      // Invert scale\n      this.__data__.invertedHeightScale = this.__data__.heightScale.invert;\n      // Store a reference to the actual node list to be scrolled\n      this.__data__.contentEl = this.parentNode.querySelector('.nodes');\n    }).on('mousedown', function (e) {\n      activeScrollbar = this;\n      activeScrollbar.__data__.clientY = e.clientY;\n\n      d3.select(activeScrollbar).classed('active', true);\n    });\n\n    // We need to listen to `mouseup` and `mousemove` globally otherwise scrolling\n    // will only work as long as the cursor hovers the actual scrollbar, which is\n    // super annoying.\n    var $document = $(document).on('mouseup', function (e) {\n      if (activeScrollbar) {\n        var deltaY = activeScrollbar.__data__.clientY - e.clientY;\n        // Save final vertical position\n        // Scrollbar\n        activeScrollbar.__data__.scrollTop = Math.min(Math.max(activeScrollbar.__data__.scrollTop - deltaY, 0), activeScrollbar.__data__.scrollHeight);\n        // Content\n        var contentEl = activeScrollbar.__data__.contentEl;\n        contentEl.__data__.scrollTop = Math.max(Math.min(contentEl.__data__.scrollTop + activeScrollbar.__data__.invertedHeightScale(deltaY), 0), -contentEl.__data__.scrollHeight);\n\n        d3.select(activeScrollbar).classed('active', false);\n\n        activeScrollbar = undefined;\n      }\n    }).on('mousemove', function (e) {\n      if (activeScrollbar) {\n        var deltaY = activeScrollbar.__data__.clientY - e.clientY;\n        // Scroll scrollbar\n        scrollColumn(activeScrollbar, Math.min(Math.max(activeScrollbar.__data__.scrollTop - deltaY, 0), activeScrollbar.__data__.scrollHeight));\n        // Scroll content\n        var contentEl = activeScrollbar.__data__.contentEl,\n            contentScrollTop = Math.max(Math.min(contentEl.__data__.scrollTop + activeScrollbar.__data__.invertedHeightScale(deltaY), 0), -contentEl.__data__.scrollHeight);\n        scrollColumn(contentEl, contentScrollTop);\n        // Scroll links\n        scrollLinks(listGraph, contentEl.__data__.linkSelections.outgoing, contentEl.__data__.level, contentScrollTop, 'source');\n        scrollLinks(listGraph, contentEl.__data__.linkSelections.incoming, contentEl.__data__.level - 1, contentScrollTop, 'target');\n      }\n    });\n\n    function toggleColumn() {\n      console.log('Toggle column');\n    }\n\n    function selectNodesColumn(el) {\n      return d3.select(levels[0][d3.select(el).data()[0].level]).selectAll('.node');\n    }\n\n    function highlightBars(el, type, deHighlight) {\n      var nodes = selectNodesColumn(el);\n      nodes.selectAll('.bar.' + type).classed('highlight', !deHighlight);\n    }\n\n    function sortColumn(type, globalVisData) {\n      var $el = $(this);\n      var d3El = d3.select(this);\n      var sorting = $el.data('sortStatus');\n\n      console.log(d3El.select('.icon-sort-unsort'));\n      console.log(d3El.select('.icon-unsort').classed('visible', false));\n      console.log(d3El.select('.icon-unsort').attr('class'));\n\n      /*\n       * 0 = unsorted\n       * 1 = asc\n       * -1 = desc\n       */\n      switch (sorting) {\n        case 1:\n          sorting = 0;\n          d3El.select('.icon-sort-asc').classed('visible', false);\n          d3El.select('.icon-unsort').classed('visible', true);\n          break;\n        case -1:\n          sorting = 1;\n          d3El.select('.icon-sort-desc').classed('visible', false);\n          d3El.select('.icon-sort-asc').classed('visible', true);\n          break;\n        default:\n          sorting = -1;\n          d3El.select('.icon-unsort').classed('visible', false);\n          d3El.select('.icon-sort-desc').classed('visible', true);\n          break;\n      }\n\n      $el.data('sortStatus', sorting);\n\n      var nodes = selectNodesColumn(this.parentNode);\n      var dataset = nodes.data();\n\n      dataset.sort(function (a, b) {\n        var valueA = a.data.barRefs[type];\n        var valueB = b.data.barRefs[type];\n        return valueA > valueB ? sorting : valueA < valueB ? -sorting : 0;\n      });\n\n      var start = function start() {\n        d3.select(this).classed('sorting', true);\n      };\n      var end = function end() {\n        d3.select(this).classed('sorting', false);\n      };\n\n      if (sorting) {\n        nodes.data(dataset, function (data) {\n          return data.data.name;\n        }).transition().duration(TRANSITION_SEMI_FAST).attr('transform', function (data, i) {\n          return 'translate(0, ' + (i * globalVisData.row.height - data.y) + ')';\n        }).each('start', start).each('end', end);\n      } else {\n        nodes.transition().duration(TRANSITION_SEMI_FAST).attr('transform', 'translate(0, 0)').each('start', start).each('end', end);\n      }\n    }\n\n    function toggleOptions() {\n      console.log('Toggle options');\n    }\n\n    function addColumnControls(selection, globalVisData) {\n      var controls = $(selection[0]).addClass('controls').width(globalVisData.column.width);\n\n      $('<li/>').addClass('toggle').width(globalVisData.column.padding).on('click', toggleColumn).appendTo(controls);\n\n      $('<li/>').addClass('sort-precision ease-all').css({\n        'width': globalVisData.column.contentWidth / 2,\n        'left': globalVisData.column.padding\n      }).on('click', function () {\n        sortColumn.call(this, 'precision', globalVisData);\n      }).on('mouseenter', function () {\n        highlightBars(this.parentNode, 'precision');\n        $(this).css({\n          'width': globalVisData.column.contentWidth\n        });\n      }).on('mouseleave', function () {\n        highlightBars(this.parentNode, 'precision', true);\n        $(this).css({\n          'width': globalVisData.column.contentWidth / 2\n        });\n      }).appendTo(controls).append('<div class=\"expandable-label\">' + '  <span class=\"letter abbr\">P</span>' + '  <span class=\"letter abbr\">r</span>' + '  <span class=\"letter\">e</span>' + '  <span class=\"letter abbr\">c</span>' + '  <span class=\"letter\">i</span>' + '  <span class=\"letter\">s</span>' + '  <span class=\"letter\">i</span>' + '  <span class=\"letter\">o</span>' + '  <span class=\"letter\">n</span>' + '</div>' + '<svg class=\"icon-unsort invisible-default visible\">' + '  <use xlink:href=\"/dist/icons.svg#unsort\"></use>' + '</svg>' + '<svg class=\"icon-sort-asc invisible-default\">' + '  <use xlink:href=\"/dist/icons.svg#sort-asc\"></use>' + '</svg>' + '<svg class=\"icon-sort-desc invisible-default\">' + '  <use xlink:href=\"/dist/icons.svg#sort-desc\"></use>' + '</svg>');\n\n      $('<li/>').addClass('sort-recall ease-all').css({\n        'width': globalVisData.column.contentWidth / 2,\n        'left': globalVisData.column.contentWidth / 2 + globalVisData.column.padding\n      }).on('click', function () {\n        sortColumn.call(this, 'recall', globalVisData);\n      }).on('mouseenter', function () {\n        highlightBars(this.parentNode, 'recall');\n        $(this).css({\n          'width': globalVisData.column.contentWidth,\n          'left': globalVisData.column.padding\n        });\n      }).on('mouseleave', function () {\n        highlightBars(this.parentNode, 'recall', true);\n        $(this).css({\n          'width': globalVisData.column.contentWidth / 2,\n          'left': globalVisData.column.contentWidth / 2 + globalVisData.column.padding\n        });\n      }).appendTo(controls).append('<div class=\"expandable-label\">' + '  <span class=\"letter abbr\">R</span>' + '  <span class=\"letter\">e</span>' + '  <span class=\"letter abbr\">c</span>' + '  <span class=\"letter\">a</span>' + '  <span class=\"letter abbr\">l</span>' + '  <span class=\"letter\">l</span>' + '</div>' + '<svg class=\"icon-unsort invisible-default visible\">' + '  <use xlink:href=\"/dist/icons.svg#unsort\"></use>' + '</svg>' + '<svg class=\"icon-sort-asc invisible-default\">' + '  <use xlink:href=\"/dist/icons.svg#sort-asc\"></use>' + '</svg>' + '<svg class=\"icon-sort-desc invisible-default\">' + '  <use xlink:href=\"/dist/icons.svg#sort-desc\"></use>' + '</svg>');\n\n      $('<li/>').addClass('options').width(globalVisData.column.padding).on('click', toggleOptions).appendTo(controls).append('<svg class=\"icon-gear\">' + '  <use xlink:href=\"/dist/icons.svg#gear\"></use>' + '</svg>');\n    }\n\n    // Add topbar\n    var topbarControls = topbarEl.selectAll('.controls').data(visData.nodes).enter().append('ul').call(addColumnControls, visData.global);\n  });\n\n})(d3);"],"sourceRoot":"/source/"}