{"version":3,"sources":["listGraph.min.js"],"names":["scrollColumn","element","offset","d3","select","attr","e","console","err","scrollLinks","graph","selection","level","scrollTop","nodeType","data","offsetLinks","diagonal","exit","remove","mousewheelColumn","listGraph","preventDefault","this","__data__","scrollHeight","Math","max","min","deltaY","scrollEl","scrollbar","el","heightScale","linkSelections","outgoing","incoming","prepareColumnForScrolling","global","querySelector","scrollbarEl","columnHeight","getBoundingClientRect","height","row","padding","scrollbarHeight","previousSibling","selectAll","x","column","width","scrollbarWidth","y","scale","linear","domain","range","traverseUp","node","callback","parent","traverseDown","i","childRefs","length","traverse","addLabel","append","visData","cell","contentWidth","contentHeight","name","text","setUpBar","datum","barHeight","className","magnitude","value","addBar","bars","newSelection","enter","call","addBars","classed","D3LayoutListGraph","svg","projection","d","container","json","error","process","source","offsetY","offsetX","target","levels","nodes","linksGroups","nodesGroups","links","rows","clone","on","hovering","each","scrollbars","activeScrollbar","$","clientY","keys","Object","parentNode","invertedHeightScale","invert","contentEl","document","undefined","contentScrollTop"],"mappings":"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","file":"listGraph.min.js","sourcesContent":["/* Copyright Fritz Lekschas: D3 example visualization app using list-based graphs */\n(function () { 'use strict';\n\n  function scrollColumn(element, offset) {\n    try {\n      d3.select(element).attr('transform', 'translate(0, ' + offset + ')');\n    } catch (e) {\n      console.err('ListGraph is not properly initialized!', e);\n    }\n  }\n\n  function scrollLinks(graph, selection, level, scrollTop, nodeType) {\n    selection.data(function () {\n      return graph.offsetLinks(level, scrollTop, nodeType);\n    }).attr('d', diagonal).exit().remove();\n  }\n\n  function mousewheelColumn(e, listGraph) {\n    e.preventDefault();\n\n    if (this.__data__.scrollHeight > 0) {\n      // Scroll nodes\n      this.__data__.scrollTop = Math.max(Math.min(this.__data__.scrollTop + e.deltaY, 0), -this.__data__.scrollHeight);\n\n      scrollColumn(this.__data__.scrollEl, this.__data__.scrollTop);\n\n      // Scroll scrollbar\n      this.__data__.scrollbar.el.__data__.scrollTop = this.__data__.scrollbar.heightScale(-this.__data__.scrollTop);\n\n      scrollColumn(this.__data__.scrollbar.el, this.__data__.scrollbar.el.__data__.scrollTop);\n\n      // Update links\n      scrollLinks(listGraph, this.__data__.linkSelections.outgoing, this.__data__.level, this.__data__.scrollTop, 'source');\n      scrollLinks(listGraph, this.__data__.linkSelections.incoming, this.__data__.level - 1, this.__data__.scrollTop, 'target');\n    }\n  }\n\n  function prepareColumnForScrolling(data, global) {\n    var scrollEl = this.querySelector('.nodes');\n    var scrollbarEl = this.querySelector('.scrollbar');\n\n    var columnHeight = scrollEl.getBoundingClientRect().height + 2 * global.row.padding;\n    var scrollHeight = columnHeight - height;\n    var scrollbarHeight = scrollHeight > 0 ? Math.max(height * height / scrollHeight, 10) : 0;\n\n    data.height = columnHeight;\n    data.linkSelections = {\n      incoming: this.previousSibling ? d3.select(this.previousSibling).selectAll('.link') : null,\n      outgoing: d3.select(this).selectAll('.link')\n    };\n    data.scrollEl = scrollEl;\n    data.scrollHeight = scrollHeight;\n    data.scrollTop = 0;\n    data.scrollbar = {\n      el: scrollbarEl,\n      x: data.x + global.column.width - scrollbarWidth,\n      y: 0,\n      width: scrollbarWidth,\n      height: scrollbarHeight,\n      scrollHeight: height - scrollbarHeight,\n      heightScale: d3.scale.linear().domain([0, scrollHeight]).range([0, height - scrollbarHeight])\n    };\n  }\n\n  function traverseUp(node, callback) {\n    while (node.parent) {\n      node = node.parent;\n      callback(node);\n    }\n  }\n\n  function traverseDown(node, callback) {\n    for (var i = node.childRefs.length; i--;) {\n      callback(node.childRefs[i]);\n      traverseDown(node.childRefs[i], callback);\n    }\n  }\n\n  function traverse(node, callback) {\n    traverseUp(node, callback);\n    traverseDown(node, callback);\n    for (var i = node.childRefs.length; i--;) {\n      callback(node.childRefs[i]);\n      traverseDown(node.childRefs[i], callback);\n    }\n  }\n\n  function addLabel(selection) {\n    selection.append('foreignObject').attr('x', function (data) {\n      return data.x + visData.global.column.padding + visData.global.cell.padding;\n    }).attr('y', function (data) {\n      return data.y + visData.global.row.padding + visData.global.cell.padding;\n    }).attr('width', visData.global.column.contentWidth).attr('height', visData.global.row.contentHeight / 2 - visData.global.cell.padding * 2).attr('class', 'label-wrapper').append('xhtml:div').attr('class', 'label').attr('title', function (data) {\n      return data.data.name;\n    }).append('xhtml:span').text(function (data) {\n      return data.data.name;\n    });\n  }\n\n  function setUpBar(selection, datum, barHeight, className, magnitude) {\n    selection.attr('class', className).attr('x', datum.x + visData.global.column.padding + visData.global.cell.padding).attr('y', function (data, i) {\n      return datum.y + visData.global.row.padding + visData.global.row.contentHeight / 2 + barHeight * i + visData.global.cell.padding * (1 + 2 * i);\n    }).attr('width', function (data) {\n      return (magnitude ? data.value : 1) * (visData.global.column.contentWidth - visData.global.cell.padding * 2);\n    }).attr('height', barHeight);\n  }\n\n  function addBar(selection) {\n    var datum = selection.datum();\n    var bars = datum.data.bars;\n    var barHeight = visData.global.row.contentHeight / (datum.data.bars.length * 2) - visData.global.cell.padding * 2;\n\n    var newSelection = selection.selectAll('.bar').data(bars).enter().append('g').attr('class', 'bar');\n\n    newSelection.append('rect').call(setUpBar, datum, barHeight, 'bar-border');\n\n    newSelection.append('rect').call(setUpBar, datum, barHeight, 'bar-magnitude', true);\n  }\n\n  function addBars(selection) {\n    selection.append('g').classed('bars', true).call(addBar);\n  }\n\n  var width = 800;\n  var height = 200;\n  var scrollbarWidth = 6;\n  // var D3ListGraph = D3LayoutListGraph();\n\n  var listGraph = new D3LayoutListGraph([width, height], [5, 5]);\n  var visData;\n\n  var diagonal = d3.svg.diagonal().projection(function (d) {\n    return [d.y, d.x];\n  });\n\n  var svg = d3.select('body').append('svg').attr('width', width).attr('height', height);\n\n  var container = svg.append('g');\n\n  d3.json('data.json', function (error, data) {\n    if (error) throw error;\n\n    visData = listGraph.process(data, ['1', '2']);\n\n    diagonal.source(function (data) {\n      return {\n        x: data.source.y + data.source.offsetY + visData.global.row.height / 2,\n        y: data.source.x + data.source.offsetX + visData.global.column.contentWidth + visData.global.column.padding\n      };\n    }).target(function (data) {\n      return {\n        x: data.target.y + data.target.offsetY + visData.global.row.height / 2,\n        y: data.target.x + data.target.offsetX + visData.global.column.padding\n      };\n    }).projection(function (data) {\n      return [data.y, data.x];\n    });\n\n    var levels = container.selectAll('g').data(visData.nodes).enter().append('g').attr('class', 'level');\n\n    // We need to add an empty rectangle that fills up the whole column to ensure\n    // that the `g`'s size is at a maximum, otherwise scrolling will be halted\n    // when the cursor leaves an actually drawn element.\n    levels.append('rect').attr('class', 'scroll-container').attr('x', function (data) {\n      return data.x;\n    }).attr('y', function (data) {\n      return data.y;\n    }).attr('width', function (data) {\n      return visData.global.column.width;\n    }).attr('height', function (data) {\n      return visData.global.column.height;\n    });\n\n    // We need an extra container which is transformed during scrolling. Otherwise\n    // we \"scroll away\" the container that is listening to the mousehweel event.\n    var linksGroups = levels.append('g').attr('class', 'links');\n\n    var links = linksGroups.selectAll('.link').data(function (data, i) {\n      return listGraph.links(i);\n    }).enter().append('path').attr('class', 'link').attr('d', diagonal);\n\n    var nodesGroups = levels.append('g').attr('class', 'nodes');\n\n    var nodes = nodesGroups.selectAll('g.node').data(function (data) {\n      return data.rows;\n    }).enter().append('g').classed('node', true).classed('clone', function (data) {\n      return data.clone;\n    });\n\n    nodes.append('rect').attr('x', function (data) {\n      return data.x + visData.global.column.padding;\n    }).attr('y', function (data) {\n      return data.y + visData.global.row.padding;\n    }).attr('width', visData.global.column.contentWidth).attr('height', visData.global.row.contentHeight).attr('rx', 2).attr('ry', 2).classed('bg', true);\n\n    nodes.on('mouseover', function (data) {\n      data.hovering = 1;\n      traverse(data, function (data) {\n        data.hovering = 2;\n      });\n\n      d3.select(this).classed('hovering-directly', true);\n      nodes.classed('hovering-indirectly', function (data) {\n        return data.hovering === 2;\n      });\n    });\n\n    nodes.on('mouseout', function (data) {\n      data.hovering = 0;\n      traverse(data, function (data) {\n        data.hovering = 0;\n      });\n\n      d3.select(this).classed('hovering-directly', false);\n      nodes.classed('hovering-indirectly', false);\n    });\n\n    // Add label\n    nodes.call(addLabel);\n\n    nodes.each(function (data) {\n      d3.select(this).call(addBars);\n    });\n\n    // Add bars\n    // nodes.call(addBars);\n\n    // Add empty scrollbar element\n    var scrollbars = levels.append('rect').classed('scrollbar', true);\n\n    // Store the height for each column to save computations when scrolling.\n    levels.each(function (data) {\n      prepareColumnForScrolling.call(this, data, visData.global);\n    });\n\n    // Adjust scrollbars\n    scrollbars.attr('x', function (data) {\n      return data.scrollbar.x;\n    }).attr('y', function (data) {\n      return data.scrollbar.y;\n    }).attr('width', function (data) {\n      return scrollbarWidth;\n    }).attr('height', function (data) {\n      return data.scrollbar.height;\n    }).attr('rx', scrollbarWidth / 2).attr('ry', scrollbarWidth / 2).classed('ready', true);\n\n    var $levels = $(levels[0]).on('mousewheel', function (e) {\n      mousewheelColumn.call(this, e, listGraph);\n    });\n\n    // Reference to the currently active scrollbar. A scrollbar is active when\n    // one clicked on the scrollbar and hold the mouse down.\n    var activeScrollbar;\n\n    var $scrollbars = $(scrollbars[0]).each(function () {\n      this.__data__ = {\n        clientY: null,\n        scrollTop: 0\n      };\n      // Copy data over from the parent\n      var keys = Object.keys(this.parentNode.__data__.scrollbar);\n      for (var i = keys.length; i--;) {\n        this.__data__[keys[i]] = this.parentNode.__data__.scrollbar[keys[i]];\n      }\n      // Invert scale\n      this.__data__.invertedHeightScale = this.__data__.heightScale.invert;\n      // Store a reference to the actual node list to be scrolled\n      this.__data__.contentEl = this.parentNode.querySelector('.nodes');\n    }).on('mousedown', function (e) {\n      activeScrollbar = this;\n      activeScrollbar.__data__.clientY = e.clientY;\n\n      d3.select(activeScrollbar).classed('active', true);\n    });\n\n    // We need to listen to `mouseup` and `mousemove` globally otherwise scrolling\n    // will only work as long as the cursor hovers the actual scrollbar, which is\n    // super annoying.\n    var $document = $(document).on('mouseup', function (e) {\n      if (activeScrollbar) {\n        var deltaY = activeScrollbar.__data__.clientY - e.clientY;\n        // Save final vertical position\n        // Scrollbar\n        activeScrollbar.__data__.scrollTop = Math.min(Math.max(activeScrollbar.__data__.scrollTop - deltaY, 0), activeScrollbar.__data__.scrollHeight);\n        // Content\n        var contentEl = activeScrollbar.__data__.contentEl;\n        contentEl.__data__.scrollTop = Math.max(Math.min(contentEl.__data__.scrollTop + activeScrollbar.__data__.invertedHeightScale(deltaY), 0), -contentEl.__data__.scrollHeight);\n\n        d3.select(activeScrollbar).classed('active', false);\n\n        activeScrollbar = undefined;\n      }\n    }).on('mousemove', function (e) {\n      if (activeScrollbar) {\n        var deltaY = activeScrollbar.__data__.clientY - e.clientY;\n        // Scroll scrollbar\n        scrollColumn(activeScrollbar, Math.min(Math.max(activeScrollbar.__data__.scrollTop - deltaY, 0), activeScrollbar.__data__.scrollHeight));\n        // Scroll content\n        var contentEl = activeScrollbar.__data__.contentEl,\n            contentScrollTop = Math.max(Math.min(contentEl.__data__.scrollTop + activeScrollbar.__data__.invertedHeightScale(deltaY), 0), -contentEl.__data__.scrollHeight);\n        scrollColumn(contentEl, contentScrollTop);\n        // Scroll links\n        scrollLinks(listGraph, contentEl.__data__.linkSelections.outgoing, contentEl.__data__.level, contentScrollTop, 'source');\n        scrollLinks(listGraph, contentEl.__data__.linkSelections.incoming, contentEl.__data__.level - 1, contentScrollTop, 'target');\n      }\n    });\n  });\n\n})();"],"sourceRoot":"/source/"}