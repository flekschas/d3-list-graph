.list-graph {
  .node {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node .invisible-container {
    display: block !important;
    opacity: 0;
  }

  .node.invisible * {
    display: none;
  }

  .node .bg {
    fill: #fff;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node .bg-border {
    fill: $color-highlight-red;
    stroke: $color-highlight-red;
    stroke-width: 6px;
    opacity: 0;
  }

  .node.lock-directly {
    &.hovering-directly .bg-border {
      opacity: 1;
    }

    .bg {
      fill: $color-highlight-red;
    }

    .border {
      stroke: $color-highlight-red;
    }

    .active .bar-magnitude {
      fill-opacity: 0.2;
    }

    .bar-magnitude {
      fill-opacity: 0.1;
    }

    .label {
      color: $black;
      font-weight: bold;
    }
  }

  .node.animating .bg-border {
    opacity: 1;
  }

  .node.lock-indirectly .bg-border {
    opacity: 0.66;
  }

  .node.focus-indirectly .bg-border {
    opacity: 0.5;
  }

  .node .border {
    fill: none;
    stroke: #e5e5e5;
    stroke-width: 2px;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .column.active .node .border {
    stroke: #bfbfbf;
  }

  .column.active .node.lock-directly .border {
    stroke: $color-highlight-red;
  }

  .node.clone .border {
    stroke-dasharray: 5, 2;
  }

  .node.hovering-directly,
  .node.hovering-indirectly {
    cursor: pointer;
  }

  .node.hovering-directly .bg {
    fill: #000;
  }

  .node.focus-directly .bg {
    fill: $color-highlight-red;
  }

  .node.hovering-directly .border,
  .node.hovering-indirectly .border,
  .column.active .node.hovering-directly .border,
  .column.active .node.hovering-indirectly .border,
  .node.rooted.hovering-directly .border,
  .node.rooted.hovering-indirectly .border,
  .column.active .node.rooted.hovering-directly .border,
  .column.active .node.rooted.hovering-indirectly .border {
    stroke: #000;
  }

  .node.focus-directly .border,
  .column.active .node.focus-directly .border {
    stroke: $color-highlight-red;
  }

  .node.rooted,
  .node.query-and,
  .node.query-or,
  .node.query-not {
    .border {
      stroke: $grey-semi-dark;
    }
    .label {
      color: $text-color-highlight;
      font-weight: bold;
    }
  }

  .node .label {
    display: block;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    padding: 0 2px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: $text-color-normal;
    font-size: 0.75rem;
    line-height: 0.75rem;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .column.active .node .label {
    color: $text-color-semi-highlight;
  }

  .column.active .node.lock-directly .label {
    color: #000;
  }

  .node.hovering-directly .label,
  .node.focus-directly .label,
  .column.active .node.hovering-directly .label,
  .column.active .node.focus-directly .label {
    color: #fff;
  }

  .node.hovering-indirectly .label,
  .node.highlight-bar .label {
    color: $text-color-highlight;
  }

  .node.highlight-label .label,
  .column.active .node.highlight-label .label {
    color: darken($color-highlight-blue, 10%);
    text-shadow: 0 0 3px transparentize($color-highlight-blue, 0.75);
  }

  .node .focus-controls .hover-helper {
    fill: $white;
    fill-opacity: 0;
    stroke: $color-highlight-red;
    stroke-width: 1;
    stroke-opacity: 0;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node.rooted .focus-controls.root:hover,
  .node.query-and .focus-controls.query:hover,
  .node.query-or .focus-controls.query:hover,
  .node.query-not .focus-controls.query:hover {
    cursor: pointer;
  }

  .node.rooted .focus-controls.root .hover-helper,
  .node.query-and .focus-controls.query .hover-helper,
  .node.query-or .focus-controls.query .hover-helper,
  .node.query-not .focus-controls.query .hover-helper {
    fill-opacity: 0.66;
    fill-opacity: 1;
    stroke-opacity: 1;
  }

  .node.hovering-directly.rooted .focus-controls.root .hover-helper,
  .node.hovering-indirectly.rooted .focus-controls.root .hover-helper,
  .node.hovering-directly.query-and .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-and .focus-controls.query .hover-helper,
  .node.hovering-directly.query-or .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-or .focus-controls.query .hover-helper,
  .node.hovering-directly.query-not .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-not .focus-controls.query .hover-helper {
    stroke-opacity: 1;
  }

  .node.rooted .focus-controls.root:hover .hover-helper,
  .node.query-and .focus-controls.query:hover .hover-helper,
  .node.query-or .focus-controls.query:hover .hover-helper,
  .node.query-not .focus-controls.query:hover .hover-helper {
    fill: $color-highlight-red;
  }

  .node .focus-controls .icon {
    color: $color-highlight-red;
  }

  .node.rooted .focus-controls.root:hover .icon,
  .node.query-and .focus-controls.query:hover .state-and-or,
  .node.query-or .focus-controls.query:hover .state-and-or,
  .node.query-not .focus-controls.query:hover .state-not {
    color: $white;
  }

  .node.rooted .focus-controls.root .state-active,
  .node.query-and .focus-controls.query .state-and-or,
  .node.query-or .focus-controls.query .state-and-or,
  .node.query-not .focus-controls.query .state-not {
    opacity: 1;
  }

  .node.hovering-directly.rooted .focus-controls.root .state-active,
  .node.hovering-indirectly.rooted .focus-controls.root .state-active,
  .node.hovering-directly.query-and .focus-controls.query .state-and-or,
  .node.hovering-indirectly.query-and .focus-controls.query .state-and-or,
  .node.hovering-directly.query-or .focus-controls.query .state-and-or,
  .node.hovering-indirectly.query-or .focus-controls.query .state-and-or,
  .node.hovering-directly.query-not .focus-controls.query .state-not,
  .node.hovering-indirectly.query-not .focus-controls.query .state-not {
    opacity: 1;
  }

  .node .focus-controls .state-and-or use {
    transition: all $transition-fast $ease-in-out-cubic;
    transform-origin: 50% 50%;
  }

  .node.query-and .focus-controls .state-and-or use {
    transform: scale(1, -1);
  }

  .bar-border,
  .bar-magnitude {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .bar-magnitude {
    fill: #000;
    fill-opacity: 0.1;
    shape-rendering: crispEdges;
    stroke-width: 2px;
    stroke-opacity: 0;
  }

  .column.active .bar-magnitude {
    fill-opacity: 0.15;
  }

  .node.focus-directly .bar-magnitude {
    fill-opacity: 0.2;
  }

  .bar.active .bar-magnitude {
    shape-rendering: auto;
  }

  .two-bar .bar-magnitude {
    fill-opacity: 0.05;
  }

  .two-bar .bar.active .bar-magnitude {
    fill-opacity: 0.15;
  }

  .two-bar .column.active .bar.active .bar-magnitude {
    fill-opacity: 0.25;
  }

  .bar-border {
    fill: none;
    stroke: mix($color-highlight-blue, #fff, 25%);
    stroke-width: 2px;
    stroke-opacity: 0;
  }

  .bar.highlight .bar-border {
    stroke-opacity: 1;
  }

  .node.hovering-directly .bar-magnitude {
    fill: $white;
    fill-opacity: 0.25;
  }

  .node.hovering-directly .active .bar-magnitude {
    fill: $color-highlight-red;
    fill-opacity: 0.5;
  }

  .bar.highlight .bar-magnitude {
    fill: lighten($color-highlight-blue, 20%);
    fill-opacity: 1 !important;
    stroke: lighten($color-highlight-blue, 20%);
    stroke-opacity: 1;
  }

  .bar.highlight.active .bar-magnitude {
    stroke-opacity: 0;
  }
}
