.list-graph {
  position: relative;
  display: block;

  .base {
    transition: opacity $transition-fast $ease-in-out-cubic;
  }

  .scroll-container {
    /* `fill:none;` doesnt work because this avoids drawing the element and will
     * engender the same behavior as if the element is ommited. See why this
     * element is actually needed below.
     */
    fill-opacity: 0;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .column.active .scroll-container {
    fill-opacity: 0.05;
  }

  .scrollbar {
    fill: #000;
    fill-opacity: 0;
    stroke: #fff;
    stroke-width: 1px;
    stroke-opacity: 0;
  }

  .zoomedOut .scrollbar {
    fill-opacity: 0 !important;
  }

  .scrollbar.ready {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  &:hover .scrollbar {
    fill-opacity: 0.15;
    stroke-opacity: 0.33;
  }

  &:hover .column:hover .scrollbar {
    fill-opacity: 0.33;
    stroke-opacity: 0.66;
  }

  &:hover .scrollbar:hover {
    fill-opacity: 0.66;
    stroke-opacity: 1;
  }

  .scrollbar.active {
    fill-opacity: 1 !important;
  }

  .node {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node .bg {
    fill: #fff;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node .bg-border {
    fill: $color-highlight-red;
    stroke: $color-highlight-red;
    stroke-width: 6px;
    opacity: 0;
  }

  .node.lock-directly .bg-border,
  .node.animating .bg-border {
    opacity: 1;
  }

  .node.lock-indirectly .bg-border {
    opacity: 0.66;
  }

  .node.focus-indirectly .bg-border {
    opacity: 0.5;
  }

  .node .border {
    fill: none;
    stroke: #e5e5e5;
    stroke-width: 2px;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .column.active .node .border {
    stroke: #bfbfbf;
  }

  .node.clone .border {
    stroke-dasharray: 5, 2;
  }

  .node.hovering-directly,
  .node.hovering-indirectly {
    cursor: pointer;
  }

  .node.hovering-directly .bg {
    fill: #000;
  }

  .node.focus-directly .bg {
    fill: $color-highlight-red;
  }

  .node.hovering-directly .border,
  .node.hovering-indirectly .border,
  .column.active .node.hovering-directly .border,
  .column.active .node.hovering-indirectly .border,
  .node.rooted.hovering-directly .border,
  .node.rooted.hovering-indirectly .border,
  .column.active .node.rooted.hovering-directly .border,
  .column.active .node.rooted.hovering-indirectly .border {
    stroke: #000;
  }

  .node.focus-directly .border,
  .column.active .node.focus-directly .border {
    stroke: $color-highlight-red;
  }

  .node.highlight-bar .border {
    stroke-opacity: 0;
  }

  .node.rooted,
  .node.query-and,
  .node.query-or,
  .node.query-not {
    .border {
      stroke: $grey-semi-dark;
    }
    .label {
      color: $text-color-highlight;
      font-weight: bold;
    }
  }

  .link {
    fill: none;
    transition: all $transition-fast $ease-in-out-cubic;

    .link-direct {
      stroke: #000;
      stroke-width: 2;
      stroke-opacity: 0;
      transition: all $transition-fast $ease-in-out-cubic;
    }
    &.visible .link-direct {
      stroke-opacity: 0.2;
    }

    &.visible.hovering .link-direct {
      stroke-opacity: 0.75;
      stroke-width: 4;
    }

    &.visible.lock .link-direct {
      stroke-opacity: 0.75;
    }

    &.visible.focus .link-direct {
      stroke-opacity: 0.5;
    }

    .link-bg {
      stroke: $color-highlight-red;
      stroke-opacity: 0;
      stroke-width: 6;
    }

    &.visible.lock .link-bg {
      stroke-opacity: 0.75;
    }

    &.visible.focus .link-bg {
      stroke-opacity: 0.5;
    }

    &.lock.hovering .link-bg {
      stroke-width: 8;
    }
  }

  .node .label {
    display: block;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    padding: 0 2px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    color: $text-color-normal;
    font-size: 0.75rem;
    line-height: 0.75rem;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .column.active .node .label {
    color: $text-color-semi-highlight;
  }

  .node.hovering-directly .label,
  .node.focus-directly .label,
  .column.active .node.hovering-directly .label,
  .column.active .node.focus-directly .label {
    color: #fff;
  }

  .node.hovering-indirectly .label,
  .node.highlight-bar .label {
    color: $text-color-highlight;
  }

  .node.highlight-label .label,
  .column.active .node.highlight-label .label {
    color: $color-highlight-red;
    text-shadow: 0 0 3px transparentize($color-highlight-red, 0.75);
  }

  .node .focus-controls .hover-helper {
    fill: $white;
    fill-opacity: 0;
    stroke: $white;
    stroke-width: 1;
    stroke-opacity: 0;
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .node.rooted .focus-controls.root:hover,
  .node.query-and .focus-controls.query:hover,
  .node.query-or .focus-controls.query:hover,
  .node.query-not .focus-controls.query:hover {
    cursor: pointer;
  }

  .node.rooted .focus-controls.root .hover-helper,
  .node.query-and .focus-controls.query .hover-helper,
  .node.query-or .focus-controls.query .hover-helper,
  .node.query-not .focus-controls.query .hover-helper {
    fill-opacity: 0.66;
  }

  .node.hovering-directly.rooted .focus-controls.root .hover-helper,
  .node.hovering-indirectly.rooted .focus-controls.root .hover-helper,
  .node.hovering-directly.query-and .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-and .focus-controls.query .hover-helper,
  .node.hovering-directly.query-or .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-or .focus-controls.query .hover-helper,
  .node.hovering-directly.query-not .focus-controls.query .hover-helper,
  .node.hovering-indirectly.query-not .focus-controls.query .hover-helper {
    stroke-opacity: 1;
  }

  .node.rooted .focus-controls.root:hover .hover-helper,
  .node.query-and .focus-controls.query:hover .hover-helper,
  .node.query-or .focus-controls.query:hover .hover-helper,
  .node.query-not .focus-controls.query:hover .hover-helper {
    stroke: $color-highlight-red;
    fill-opacity: 1;
    stroke-opacity: 1;
  }

  .node.rooted .focus-controls.root:hover .icon,
  .node.query-and .focus-controls.query:hover .state-and-or,
  .node.query-or .focus-controls.query:hover .state-and-or,
  .node.query-not .focus-controls.query:hover .state-not {
    color: $color-highlight-red;
    opacity: 1;
  }

  .node.query-and .query .state-inactive,
  .node.query-or .query .state-inactive,
  .node.query-not .query .state-inactive {
    opacity: 0 !important;
  }

  .node.rooted .focus-controls.root .state-active,
  .node.query-and .focus-controls.query .state-and-or,
  .node.query-or .focus-controls.query .state-and-or,
  .node.query-not .focus-controls.query .state-not {
    opacity: 0.33;
  }

  .node.hovering-directly.rooted .focus-controls.root .state-active,
  .node.hovering-indirectly.rooted .focus-controls.root .state-active,
  .node.hovering-directly.query-and .focus-controls.query .state-and-or,
  .node.hovering-indirectly.query-and .focus-controls.query .state-and-or,
  .node.hovering-directly.query-or .focus-controls.query .state-and-or,
  .node.hovering-indirectly.query-or .focus-controls.query .state-and-or,
  .node.hovering-directly.query-not .focus-controls.query .state-not,
  .node.hovering-indirectly.query-not .focus-controls.query .state-not {
    opacity: 1;
  }

  .node .focus-controls .state-and-or use {
    transition: all $transition-fast $ease-in-out-cubic;
    transform-origin: 50% 50%;
  }

  .node.query-and .focus-controls .state-and-or use {
    transform: scale(1, -1);
  }

  .bar-border,
  .bar-magnitude {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .bar-magnitude {
    fill: #000;
    fill-opacity: 0.1;
    shape-rendering: crispEdges;
  }

  .column.active .bar-magnitude {
    fill-opacity: 0.15;
  }

  .node.focus-directly .bar-magnitude {
    fill-opacity: 0.2;
  }

  .bar-indicator {
    fill: $color-highlight-red;
    opacity: 0;
    transition: opacity $transition-fast $ease-in-out-cubic;
  }

  .bar.active .bar-magnitude {
    shape-rendering: auto;
  }

  .two-bar .bar-magnitude {
    fill-opacity: 0.05;
  }

  .two-bar .bar.active .bar-magnitude {
    fill-opacity: 0.15;
  }

  .two-bar .column.active .bar.active .bar-magnitude {
    fill-opacity: 0.25;
  }

  .bar-border {
    fill: none;
    stroke: mix(lighten($color-highlight-red, 20%), #fff, 25%);
    stroke-width: 2px;
    stroke-opacity: 0;
  }

  .bar.highlight .bar-border {
    stroke-opacity: 1;
  }

  .node.hovering-directly .bar-magnitude {
    fill: #606060;
    fill-opacity: 1 !important;
  }

  .node.hovering-directly .active .bar-magnitude {
    fill: #404040;
  }

  .node.hovering-directly .bar.active .bar-indicator,
  .node.hovering-indirectly .bar.active .bar-indicator {
    opacity: 1;
  }

  .bar.highlight .bar-magnitude {
    fill: lighten($color-highlight-red, 20%);
    fill-opacity: 1 !important;
  }

  .link-indicator {
    opacity: 0;
    transition: all $transition-fast $ease-in-out-cubic;

    &.visible {
      opacity: 1;
    }

    &.incoming {
      transform-origin: right center;
    }

    &.outgoing {
      transform-origin: left center;
    }
  }

  .lock-directly .link-indicator,
  .lock-indirectly .link-indicator,
  .hovering-directly .link-indicator,
  .hovering-indirectly .link-indicator {
    fill: #000;
  }

  .hovering-directly .link-indicator,
  .hovering-indirectly .link-indicator {
    transform: scale(1.25, 2);
  }

  .link-location-indicator {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  .hovering-directly .link-location-indicator.above,
  .hovering-indirectly .link-location-indicator.above {
    transform: translateY(-1px);
  }

  .hovering-directly .link-location-indicator.below,
  .hovering-indirectly .link-location-indicator.below {
    transform: translateY(1px);
  }

  .sorting {
    opacity: 0.33;
  }

  .hidden {
    display: none;
  }

  .hidden-default {
    display: none;

    &.shown {
      display: display;
    }
  }

  .invisible-default {
    opacity: 0;

    &.visible,
    > .visible {
      opacity: 1;
    }
  }

  .ease-all {
    transition: all $transition-fast $ease-in-out-cubic;
  }

  &.unselectable {
    * {
      cursor: default;
    }

    .label {
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      -khtml-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }
  }

  &.less-animations * {
    transition: none !important;
  }

  .is-mirrored-horizontally {
    transform: scale(1, -1);
  }
}
